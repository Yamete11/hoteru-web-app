// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using hoteru_be.Context;

namespace hoteru_be.Migrations
{
    [DbContext(typeof(MyDbContext))]
    partial class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("hoteru_be.Entities.Address", b =>
                {
                    b.Property<int>("IdAddress")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Postcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdAddress");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("hoteru_be.Entities.Hotel", b =>
                {
                    b.Property<int>("IdHotel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdAddress")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdHotel");

                    b.HasIndex("IdAddress")
                        .IsUnique();

                    b.ToTable("Hotels");
                });

            modelBuilder.Entity("hoteru_be.Entities.Person", b =>
                {
                    b.Property<int>("IdPerson")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdHotel")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdPerson");

                    b.HasIndex("IdHotel");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("hoteru_be.Entities.Room", b =>
                {
                    b.Property<int>("IdRoom")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<int>("IdRoomStatus")
                        .HasColumnType("int");

                    b.Property<int>("IdRoomType")
                        .HasColumnType("int");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.HasKey("IdRoom");

                    b.HasIndex("IdRoomStatus");

                    b.HasIndex("IdRoomType");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("hoteru_be.Entities.RoomStatus", b =>
                {
                    b.Property<int>("IdRoomStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdRoomStatus");

                    b.ToTable("RoomStatuses");

                    b.HasData(
                        new
                        {
                            IdRoomStatus = 1,
                            Title = "Out of service"
                        },
                        new
                        {
                            IdRoomStatus = 2,
                            Title = "Occupied"
                        },
                        new
                        {
                            IdRoomStatus = 3,
                            Title = "Ready"
                        });
                });

            modelBuilder.Entity("hoteru_be.Entities.RoomType", b =>
                {
                    b.Property<int>("IdRoomType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdRoomType");

                    b.ToTable("RoomTypes");
                });

            modelBuilder.Entity("hoteru_be.Entities.User", b =>
                {
                    b.Property<int>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdUserType")
                        .HasColumnType("int");

                    b.Property<string>("LoginName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdUser");

                    b.HasIndex("IdUserType")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("hoteru_be.Entities.UserType", b =>
                {
                    b.Property<int>("IdUserType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdUserType");

                    b.ToTable("UserTypes");

                    b.HasData(
                        new
                        {
                            IdUserType = 1,
                            Title = "Superadmin"
                        },
                        new
                        {
                            IdUserType = 2,
                            Title = "Admin"
                        },
                        new
                        {
                            IdUserType = 3,
                            Title = "Employee"
                        });
                });

            modelBuilder.Entity("hoteru_be.Entities.Hotel", b =>
                {
                    b.HasOne("hoteru_be.Entities.Address", "Address")
                        .WithOne("Hotel")
                        .HasForeignKey("hoteru_be.Entities.Hotel", "IdAddress")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");
                });

            modelBuilder.Entity("hoteru_be.Entities.Person", b =>
                {
                    b.HasOne("hoteru_be.Entities.Hotel", "Hotel")
                        .WithMany()
                        .HasForeignKey("IdHotel")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("hoteru_be.Entities.Room", b =>
                {
                    b.HasOne("hoteru_be.Entities.RoomStatus", "RoomStatus")
                        .WithMany("Rooms")
                        .HasForeignKey("IdRoomStatus")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("hoteru_be.Entities.RoomType", "RoomType")
                        .WithMany("Rooms")
                        .HasForeignKey("IdRoomType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RoomStatus");

                    b.Navigation("RoomType");
                });

            modelBuilder.Entity("hoteru_be.Entities.User", b =>
                {
                    b.HasOne("hoteru_be.Entities.UserType", "UserType")
                        .WithOne("User")
                        .HasForeignKey("hoteru_be.Entities.User", "IdUserType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserType");
                });

            modelBuilder.Entity("hoteru_be.Entities.Address", b =>
                {
                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("hoteru_be.Entities.RoomStatus", b =>
                {
                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("hoteru_be.Entities.RoomType", b =>
                {
                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("hoteru_be.Entities.UserType", b =>
                {
                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
