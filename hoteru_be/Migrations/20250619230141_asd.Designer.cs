// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using hoteru_be.Context;

namespace hoteru_be.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20250619230141_asd")]
    partial class asd
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("hoteru_be.Entities.Address", b =>
                {
                    b.Property<int>("IdAddress")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Postcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdAddress");

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            IdAddress = 1,
                            City = "Warsaw",
                            Country = "Poland",
                            Postcode = "02-913",
                            Street = "Koszykowa 86"
                        });
                });

            modelBuilder.Entity("hoteru_be.Entities.Bill", b =>
                {
                    b.Property<int>("IdBill")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BookedBy")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("GuestName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("GuestSurname")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("InDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("OutDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RoomNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Sum")
                        .HasColumnType("real");

                    b.HasKey("IdBill");

                    b.ToTable("Bills");

                    b.HasData(
                        new
                        {
                            IdBill = 1,
                            BookedBy = "zxc",
                            Created = new DateTime(2025, 6, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GuestName = "Noah",
                            GuestSurname = "Wilson",
                            InDate = new DateTime(2025, 6, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OutDate = new DateTime(2025, 6, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RoomNumber = "108",
                            Sum = 140f
                        });
                });

            modelBuilder.Entity("hoteru_be.Entities.Deposit", b =>
                {
                    b.Property<int>("IdDeposit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdDepositType")
                        .HasColumnType("int");

                    b.Property<float>("Sum")
                        .HasColumnType("real");

                    b.HasKey("IdDeposit");

                    b.HasIndex("IdDepositType");

                    b.ToTable("Deposits");

                    b.HasData(
                        new
                        {
                            IdDeposit = 1,
                            IdDepositType = 1,
                            Sum = 200f
                        },
                        new
                        {
                            IdDeposit = 2,
                            IdDepositType = 1,
                            Sum = 300f
                        },
                        new
                        {
                            IdDeposit = 3,
                            IdDepositType = 2,
                            Sum = 500f
                        },
                        new
                        {
                            IdDeposit = 4,
                            IdDepositType = 2,
                            Sum = 1000f
                        });
                });

            modelBuilder.Entity("hoteru_be.Entities.DepositType", b =>
                {
                    b.Property<int>("IdDepositType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdDepositType");

                    b.ToTable("DepositTypes");

                    b.HasData(
                        new
                        {
                            IdDepositType = 1,
                            Title = "Card"
                        },
                        new
                        {
                            IdDepositType = 2,
                            Title = "Cash"
                        });
                });

            modelBuilder.Entity("hoteru_be.Entities.Guest", b =>
                {
                    b.Property<int>("IdPerson")
                        .HasColumnType("int");

                    b.Property<int>("IdGuestStatus")
                        .HasColumnType("int");

                    b.Property<string>("Passport")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdPerson");

                    b.HasIndex("IdGuestStatus");

                    b.ToTable("Guests");

                    b.HasData(
                        new
                        {
                            IdPerson = 5,
                            IdGuestStatus = 1,
                            Passport = "PL111111",
                            TelNumber = "500100100"
                        },
                        new
                        {
                            IdPerson = 6,
                            IdGuestStatus = 1,
                            Passport = "PL222222",
                            TelNumber = "500200200"
                        },
                        new
                        {
                            IdPerson = 7,
                            IdGuestStatus = 1,
                            Passport = "PL333333",
                            TelNumber = "500300300"
                        },
                        new
                        {
                            IdPerson = 8,
                            IdGuestStatus = 1,
                            Passport = "PL444444",
                            TelNumber = "500400400"
                        },
                        new
                        {
                            IdPerson = 9,
                            IdGuestStatus = 1,
                            Passport = "PL555555",
                            TelNumber = "500500500"
                        },
                        new
                        {
                            IdPerson = 10,
                            IdGuestStatus = 1,
                            Passport = "PL666666",
                            TelNumber = "500600600"
                        },
                        new
                        {
                            IdPerson = 11,
                            IdGuestStatus = 1,
                            Passport = "PL777777",
                            TelNumber = "500700700"
                        },
                        new
                        {
                            IdPerson = 12,
                            IdGuestStatus = 1,
                            Passport = "PL888888",
                            TelNumber = "500800800"
                        },
                        new
                        {
                            IdPerson = 13,
                            IdGuestStatus = 1,
                            Passport = "PL999999",
                            TelNumber = "500900900"
                        },
                        new
                        {
                            IdPerson = 14,
                            IdGuestStatus = 1,
                            Passport = "PL000000",
                            TelNumber = "501000000"
                        });
                });

            modelBuilder.Entity("hoteru_be.Entities.GuestStatus", b =>
                {
                    b.Property<int>("IdGuestStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdGuestStatus");

                    b.ToTable("GuestStatuses");

                    b.HasData(
                        new
                        {
                            IdGuestStatus = 1,
                            Title = "VIP"
                        },
                        new
                        {
                            IdGuestStatus = 2,
                            Title = "Regular"
                        });
                });

            modelBuilder.Entity("hoteru_be.Entities.Hotel", b =>
                {
                    b.Property<int>("IdHotel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdAddress")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdHotel");

                    b.HasIndex("IdAddress")
                        .IsUnique();

                    b.ToTable("Hotels");

                    b.HasData(
                        new
                        {
                            IdHotel = 1,
                            IdAddress = 1,
                            Title = "Nobu"
                        });
                });

            modelBuilder.Entity("hoteru_be.Entities.Person", b =>
                {
                    b.Property<int>("IdPerson")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdHotel")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdPerson");

                    b.HasIndex("IdHotel");

                    b.ToTable("Persons");

                    b.HasData(
                        new
                        {
                            IdPerson = 1,
                            Email = "helli@gmail.com",
                            IdHotel = 1,
                            Name = "Gleb",
                            Surname = "Ivanov"
                        },
                        new
                        {
                            IdPerson = 2,
                            Email = "test@gmail.com",
                            IdHotel = 1,
                            Name = "Artur",
                            Surname = "Morgan"
                        },
                        new
                        {
                            IdPerson = 3,
                            Email = "password@gmail.com",
                            IdHotel = 1,
                            Name = "Mikolaj",
                            Surname = "Sluzalek"
                        },
                        new
                        {
                            IdPerson = 4,
                            Email = "marston@gmail.com",
                            IdHotel = 1,
                            Name = "Jack",
                            Surname = "Marston"
                        },
                        new
                        {
                            IdPerson = 5,
                            Email = "anna.nowak@gmail.com",
                            IdHotel = 1,
                            Name = "Anna",
                            Surname = "Nowak"
                        },
                        new
                        {
                            IdPerson = 6,
                            Email = "john.doe@gmail.com",
                            IdHotel = 1,
                            Name = "John",
                            Surname = "Doe"
                        },
                        new
                        {
                            IdPerson = 7,
                            Email = "emma.smith@gmail.com",
                            IdHotel = 1,
                            Name = "Emma",
                            Surname = "Smith"
                        },
                        new
                        {
                            IdPerson = 8,
                            Email = "liam.brown@gmail.com",
                            IdHotel = 1,
                            Name = "Liam",
                            Surname = "Brown"
                        },
                        new
                        {
                            IdPerson = 9,
                            Email = "olivia.taylor@gmail.com",
                            IdHotel = 1,
                            Name = "Olivia",
                            Surname = "Taylor"
                        },
                        new
                        {
                            IdPerson = 10,
                            Email = "noah.wilson@gmail.com",
                            IdHotel = 1,
                            Name = "Noah",
                            Surname = "Wilson"
                        },
                        new
                        {
                            IdPerson = 11,
                            Email = "sophia.martinez@gmail.com",
                            IdHotel = 1,
                            Name = "Sophia",
                            Surname = "Martinez"
                        },
                        new
                        {
                            IdPerson = 12,
                            Email = "james.anderson@gmail.com",
                            IdHotel = 1,
                            Name = "James",
                            Surname = "Anderson"
                        },
                        new
                        {
                            IdPerson = 13,
                            Email = "isabella.thomas@gmail.com",
                            IdHotel = 1,
                            Name = "Isabella",
                            Surname = "Thomas"
                        },
                        new
                        {
                            IdPerson = 14,
                            Email = "william.lee@gmail.com",
                            IdHotel = 1,
                            Name = "William",
                            Surname = "Lee"
                        });
                });

            modelBuilder.Entity("hoteru_be.Entities.Reservation", b =>
                {
                    b.Property<int>("IdReservation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<bool>("Confirmed")
                        .HasColumnType("bit");

                    b.Property<int?>("IdBill")
                        .HasColumnType("int");

                    b.Property<int?>("IdDeposit")
                        .HasColumnType("int");

                    b.Property<int>("IdGuest")
                        .HasColumnType("int");

                    b.Property<int>("IdRoom")
                        .HasColumnType("int");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<DateTime>("In")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Out")
                        .HasColumnType("datetime2");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.HasKey("IdReservation");

                    b.HasIndex("IdBill")
                        .IsUnique()
                        .HasFilter("[IdBill] IS NOT NULL");

                    b.HasIndex("IdDeposit")
                        .IsUnique()
                        .HasFilter("[IdDeposit] IS NOT NULL");

                    b.HasIndex("IdGuest");

                    b.HasIndex("IdRoom");

                    b.HasIndex("IdUser");

                    b.ToTable("Reservations");

                    b.HasData(
                        new
                        {
                            IdReservation = 1,
                            Capacity = 1,
                            Confirmed = true,
                            IdDeposit = 1,
                            IdGuest = 5,
                            IdRoom = 2,
                            IdUser = 1,
                            In = new DateTime(2025, 6, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Out = new DateTime(2025, 6, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 150f
                        },
                        new
                        {
                            IdReservation = 2,
                            Capacity = 2,
                            Confirmed = true,
                            IdDeposit = 2,
                            IdGuest = 6,
                            IdRoom = 3,
                            IdUser = 2,
                            In = new DateTime(2025, 6, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Out = new DateTime(2025, 6, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 180f
                        },
                        new
                        {
                            IdReservation = 3,
                            Capacity = 3,
                            Confirmed = true,
                            IdDeposit = 3,
                            IdGuest = 7,
                            IdRoom = 5,
                            IdUser = 3,
                            In = new DateTime(2025, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Out = new DateTime(2025, 6, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 340f
                        },
                        new
                        {
                            IdReservation = 4,
                            Capacity = 4,
                            Confirmed = true,
                            IdDeposit = 4,
                            IdGuest = 8,
                            IdRoom = 6,
                            IdUser = 3,
                            In = new DateTime(2025, 6, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Out = new DateTime(2025, 6, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 325f
                        },
                        new
                        {
                            IdReservation = 5,
                            Capacity = 1,
                            Confirmed = true,
                            IdGuest = 9,
                            IdRoom = 7,
                            IdUser = 3,
                            In = new DateTime(2025, 6, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Out = new DateTime(2025, 6, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 330f
                        },
                        new
                        {
                            IdReservation = 6,
                            Capacity = 2,
                            Confirmed = true,
                            IdBill = 1,
                            IdGuest = 10,
                            IdRoom = 8,
                            IdUser = 3,
                            In = new DateTime(2025, 6, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Out = new DateTime(2025, 6, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 140f
                        },
                        new
                        {
                            IdReservation = 7,
                            Capacity = 3,
                            Confirmed = false,
                            IdGuest = 6,
                            IdRoom = 9,
                            IdUser = 3,
                            In = new DateTime(2025, 6, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Out = new DateTime(2025, 6, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 330f
                        },
                        new
                        {
                            IdReservation = 8,
                            Capacity = 4,
                            Confirmed = false,
                            IdGuest = 11,
                            IdRoom = 10,
                            IdUser = 3,
                            In = new DateTime(2025, 6, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Out = new DateTime(2025, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 380f
                        });
                });

            modelBuilder.Entity("hoteru_be.Entities.ReservationService", b =>
                {
                    b.Property<int>("IdReservationService")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdReservation")
                        .HasColumnType("int");

                    b.Property<int>("IdService")
                        .HasColumnType("int");

                    b.HasKey("IdReservationService");

                    b.HasIndex("IdReservation");

                    b.HasIndex("IdService");

                    b.ToTable("ReservationServices");

                    b.HasData(
                        new
                        {
                            IdReservationService = 1,
                            Date = new DateTime(2023, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdReservation = 2,
                            IdService = 1
                        },
                        new
                        {
                            IdReservationService = 2,
                            Date = new DateTime(2023, 11, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdReservation = 2,
                            IdService = 2
                        },
                        new
                        {
                            IdReservationService = 3,
                            Date = new DateTime(2023, 11, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdReservation = 2,
                            IdService = 3
                        },
                        new
                        {
                            IdReservationService = 4,
                            Date = new DateTime(2023, 11, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdReservation = 3,
                            IdService = 3
                        });
                });

            modelBuilder.Entity("hoteru_be.Entities.Room", b =>
                {
                    b.Property<int>("IdRoom")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<int>("IdRoomStatus")
                        .HasColumnType("int");

                    b.Property<int>("IdRoomType")
                        .HasColumnType("int");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.HasKey("IdRoom");

                    b.HasIndex("IdRoomStatus");

                    b.HasIndex("IdRoomType");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            IdRoom = 1,
                            Capacity = 1,
                            IdRoomStatus = 3,
                            IdRoomType = 1,
                            Number = "101",
                            Price = 45f
                        },
                        new
                        {
                            IdRoom = 2,
                            Capacity = 2,
                            IdRoomStatus = 2,
                            IdRoomType = 1,
                            Number = "102",
                            Price = 75f
                        },
                        new
                        {
                            IdRoom = 3,
                            Capacity = 3,
                            IdRoomStatus = 2,
                            IdRoomType = 1,
                            Number = "103",
                            Price = 60f
                        },
                        new
                        {
                            IdRoom = 4,
                            Capacity = 4,
                            IdRoomStatus = 3,
                            IdRoomType = 1,
                            Number = "104",
                            Price = 90f
                        },
                        new
                        {
                            IdRoom = 5,
                            Capacity = 5,
                            IdRoomStatus = 2,
                            IdRoomType = 1,
                            Number = "105",
                            Price = 85f
                        },
                        new
                        {
                            IdRoom = 6,
                            Capacity = 6,
                            IdRoomStatus = 2,
                            IdRoomType = 1,
                            Number = "106",
                            Price = 65f
                        },
                        new
                        {
                            IdRoom = 7,
                            Capacity = 7,
                            IdRoomStatus = 2,
                            IdRoomType = 1,
                            Number = "107",
                            Price = 55f
                        },
                        new
                        {
                            IdRoom = 8,
                            Capacity = 8,
                            IdRoomStatus = 2,
                            IdRoomType = 1,
                            Number = "108",
                            Price = 70f
                        },
                        new
                        {
                            IdRoom = 9,
                            Capacity = 9,
                            IdRoomStatus = 2,
                            IdRoomType = 1,
                            Number = "109",
                            Price = 110f
                        },
                        new
                        {
                            IdRoom = 10,
                            Capacity = 10,
                            IdRoomStatus = 2,
                            IdRoomType = 1,
                            Number = "201",
                            Price = 95f
                        },
                        new
                        {
                            IdRoom = 11,
                            Capacity = 11,
                            IdRoomStatus = 3,
                            IdRoomType = 1,
                            Number = "202",
                            Price = 100f
                        },
                        new
                        {
                            IdRoom = 12,
                            Capacity = 12,
                            IdRoomStatus = 3,
                            IdRoomType = 1,
                            Number = "203",
                            Price = 120f
                        },
                        new
                        {
                            IdRoom = 13,
                            Capacity = 13,
                            IdRoomStatus = 3,
                            IdRoomType = 1,
                            Number = "204",
                            Price = 130f
                        },
                        new
                        {
                            IdRoom = 14,
                            Capacity = 14,
                            IdRoomStatus = 3,
                            IdRoomType = 1,
                            Number = "205",
                            Price = 75f
                        },
                        new
                        {
                            IdRoom = 15,
                            Capacity = 15,
                            IdRoomStatus = 3,
                            IdRoomType = 1,
                            Number = "206",
                            Price = 85f
                        },
                        new
                        {
                            IdRoom = 16,
                            Capacity = 16,
                            IdRoomStatus = 3,
                            IdRoomType = 1,
                            Number = "207",
                            Price = 105f
                        },
                        new
                        {
                            IdRoom = 17,
                            Capacity = 17,
                            IdRoomStatus = 3,
                            IdRoomType = 1,
                            Number = "208",
                            Price = 140f
                        },
                        new
                        {
                            IdRoom = 18,
                            Capacity = 18,
                            IdRoomStatus = 3,
                            IdRoomType = 1,
                            Number = "209",
                            Price = 135f
                        },
                        new
                        {
                            IdRoom = 19,
                            Capacity = 19,
                            IdRoomStatus = 3,
                            IdRoomType = 2,
                            Number = "301",
                            Price = 100f
                        },
                        new
                        {
                            IdRoom = 20,
                            Capacity = 20,
                            IdRoomStatus = 3,
                            IdRoomType = 2,
                            Number = "302",
                            Price = 110f
                        },
                        new
                        {
                            IdRoom = 21,
                            Capacity = 21,
                            IdRoomStatus = 3,
                            IdRoomType = 2,
                            Number = "303",
                            Price = 115f
                        },
                        new
                        {
                            IdRoom = 22,
                            Capacity = 22,
                            IdRoomStatus = 3,
                            IdRoomType = 2,
                            Number = "304",
                            Price = 125f
                        },
                        new
                        {
                            IdRoom = 23,
                            Capacity = 23,
                            IdRoomStatus = 3,
                            IdRoomType = 2,
                            Number = "305",
                            Price = 135f
                        },
                        new
                        {
                            IdRoom = 24,
                            Capacity = 24,
                            IdRoomStatus = 3,
                            IdRoomType = 2,
                            Number = "306",
                            Price = 95f
                        },
                        new
                        {
                            IdRoom = 25,
                            Capacity = 25,
                            IdRoomStatus = 3,
                            IdRoomType = 2,
                            Number = "307",
                            Price = 85f
                        },
                        new
                        {
                            IdRoom = 26,
                            Capacity = 26,
                            IdRoomStatus = 3,
                            IdRoomType = 2,
                            Number = "308",
                            Price = 125f
                        },
                        new
                        {
                            IdRoom = 27,
                            Capacity = 27,
                            IdRoomStatus = 3,
                            IdRoomType = 2,
                            Number = "309",
                            Price = 140f
                        },
                        new
                        {
                            IdRoom = 28,
                            Capacity = 28,
                            IdRoomStatus = 3,
                            IdRoomType = 2,
                            Number = "401",
                            Price = 145f
                        },
                        new
                        {
                            IdRoom = 29,
                            Capacity = 29,
                            IdRoomStatus = 3,
                            IdRoomType = 2,
                            Number = "402",
                            Price = 150f
                        },
                        new
                        {
                            IdRoom = 30,
                            Capacity = 30,
                            IdRoomStatus = 3,
                            IdRoomType = 2,
                            Number = "403",
                            Price = 125f
                        },
                        new
                        {
                            IdRoom = 31,
                            Capacity = 31,
                            IdRoomStatus = 3,
                            IdRoomType = 2,
                            Number = "404",
                            Price = 135f
                        },
                        new
                        {
                            IdRoom = 32,
                            Capacity = 32,
                            IdRoomStatus = 3,
                            IdRoomType = 2,
                            Number = "405",
                            Price = 100f
                        },
                        new
                        {
                            IdRoom = 33,
                            Capacity = 33,
                            IdRoomStatus = 3,
                            IdRoomType = 2,
                            Number = "406",
                            Price = 110f
                        },
                        new
                        {
                            IdRoom = 34,
                            Capacity = 34,
                            IdRoomStatus = 3,
                            IdRoomType = 2,
                            Number = "407",
                            Price = 95f
                        });
                });

            modelBuilder.Entity("hoteru_be.Entities.RoomStatus", b =>
                {
                    b.Property<int>("IdRoomStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdRoomStatus");

                    b.ToTable("RoomStatuses");

                    b.HasData(
                        new
                        {
                            IdRoomStatus = 1,
                            Title = "Out of service"
                        },
                        new
                        {
                            IdRoomStatus = 2,
                            Title = "Occupied"
                        },
                        new
                        {
                            IdRoomStatus = 3,
                            Title = "Ready"
                        });
                });

            modelBuilder.Entity("hoteru_be.Entities.RoomType", b =>
                {
                    b.Property<int>("IdRoomType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdRoomType");

                    b.ToTable("RoomTypes");

                    b.HasData(
                        new
                        {
                            IdRoomType = 1,
                            Title = "Regular"
                        },
                        new
                        {
                            IdRoomType = 2,
                            Title = "Luxury"
                        });
                });

            modelBuilder.Entity("hoteru_be.Entities.Service", b =>
                {
                    b.Property<int>("IdService")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Sum")
                        .HasColumnType("real");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdService");

                    b.ToTable("Services");

                    b.HasData(
                        new
                        {
                            IdService = 1,
                            Description = "None",
                            Sum = 355.5f,
                            Title = "Breakfast"
                        },
                        new
                        {
                            IdService = 2,
                            Description = "None",
                            Sum = 120.5f,
                            Title = "Spa"
                        },
                        new
                        {
                            IdService = 3,
                            Description = "None",
                            Sum = 248.5f,
                            Title = "Assistent"
                        });
                });

            modelBuilder.Entity("hoteru_be.Entities.User", b =>
                {
                    b.Property<int>("IdPerson")
                        .HasColumnType("int");

                    b.Property<int>("IdUserType")
                        .HasColumnType("int");

                    b.Property<string>("LoginName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdPerson");

                    b.HasIndex("IdUserType");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            IdPerson = 1,
                            IdUserType = 3,
                            LoginName = "asd",
                            Password = "asd"
                        },
                        new
                        {
                            IdPerson = 2,
                            IdUserType = 1,
                            LoginName = "qwe",
                            Password = "qwe"
                        },
                        new
                        {
                            IdPerson = 3,
                            IdUserType = 2,
                            LoginName = "zxc",
                            Password = "zxc"
                        },
                        new
                        {
                            IdPerson = 4,
                            IdUserType = 3,
                            LoginName = "qaz",
                            Password = "qaz"
                        });
                });

            modelBuilder.Entity("hoteru_be.Entities.UserType", b =>
                {
                    b.Property<int>("IdUserType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdUserType");

                    b.ToTable("UserTypes");

                    b.HasData(
                        new
                        {
                            IdUserType = 1,
                            Title = "Superadmin"
                        },
                        new
                        {
                            IdUserType = 2,
                            Title = "Admin"
                        },
                        new
                        {
                            IdUserType = 3,
                            Title = "Employee"
                        });
                });

            modelBuilder.Entity("hoteru_be.Entities.Deposit", b =>
                {
                    b.HasOne("hoteru_be.Entities.DepositType", "DepositType")
                        .WithMany("Deposits")
                        .HasForeignKey("IdDepositType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DepositType");
                });

            modelBuilder.Entity("hoteru_be.Entities.Guest", b =>
                {
                    b.HasOne("hoteru_be.Entities.GuestStatus", "GuestStatus")
                        .WithMany("Guests")
                        .HasForeignKey("IdGuestStatus")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("hoteru_be.Entities.Person", "Person")
                        .WithOne("Guest")
                        .HasForeignKey("hoteru_be.Entities.Guest", "IdPerson")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GuestStatus");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("hoteru_be.Entities.Hotel", b =>
                {
                    b.HasOne("hoteru_be.Entities.Address", "Address")
                        .WithOne("Hotel")
                        .HasForeignKey("hoteru_be.Entities.Hotel", "IdAddress")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");
                });

            modelBuilder.Entity("hoteru_be.Entities.Person", b =>
                {
                    b.HasOne("hoteru_be.Entities.Hotel", "Hotel")
                        .WithMany()
                        .HasForeignKey("IdHotel")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("hoteru_be.Entities.Reservation", b =>
                {
                    b.HasOne("hoteru_be.Entities.Bill", "Bill")
                        .WithOne("Reservation")
                        .HasForeignKey("hoteru_be.Entities.Reservation", "IdBill");

                    b.HasOne("hoteru_be.Entities.Deposit", "Deposit")
                        .WithOne("Reservation")
                        .HasForeignKey("hoteru_be.Entities.Reservation", "IdDeposit");

                    b.HasOne("hoteru_be.Entities.Guest", "Guest")
                        .WithMany("Reservations")
                        .HasForeignKey("IdGuest")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("hoteru_be.Entities.Room", "Room")
                        .WithMany("Reservations")
                        .HasForeignKey("IdRoom")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("hoteru_be.Entities.User", "User")
                        .WithMany("Reservations")
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");

                    b.Navigation("Deposit");

                    b.Navigation("Guest");

                    b.Navigation("Room");

                    b.Navigation("User");
                });

            modelBuilder.Entity("hoteru_be.Entities.ReservationService", b =>
                {
                    b.HasOne("hoteru_be.Entities.Reservation", "Reservation")
                        .WithMany("ReservationServices")
                        .HasForeignKey("IdReservation")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("hoteru_be.Entities.Service", "Service")
                        .WithMany("ReservationServices")
                        .HasForeignKey("IdService")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reservation");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("hoteru_be.Entities.Room", b =>
                {
                    b.HasOne("hoteru_be.Entities.RoomStatus", "RoomStatus")
                        .WithMany("Rooms")
                        .HasForeignKey("IdRoomStatus")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("hoteru_be.Entities.RoomType", "RoomType")
                        .WithMany("Rooms")
                        .HasForeignKey("IdRoomType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RoomStatus");

                    b.Navigation("RoomType");
                });

            modelBuilder.Entity("hoteru_be.Entities.User", b =>
                {
                    b.HasOne("hoteru_be.Entities.Person", "Person")
                        .WithOne("User")
                        .HasForeignKey("hoteru_be.Entities.User", "IdPerson")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("hoteru_be.Entities.UserType", "UserType")
                        .WithMany("Users")
                        .HasForeignKey("IdUserType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");

                    b.Navigation("UserType");
                });

            modelBuilder.Entity("hoteru_be.Entities.Address", b =>
                {
                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("hoteru_be.Entities.Bill", b =>
                {
                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("hoteru_be.Entities.Deposit", b =>
                {
                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("hoteru_be.Entities.DepositType", b =>
                {
                    b.Navigation("Deposits");
                });

            modelBuilder.Entity("hoteru_be.Entities.Guest", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("hoteru_be.Entities.GuestStatus", b =>
                {
                    b.Navigation("Guests");
                });

            modelBuilder.Entity("hoteru_be.Entities.Person", b =>
                {
                    b.Navigation("Guest");

                    b.Navigation("User");
                });

            modelBuilder.Entity("hoteru_be.Entities.Reservation", b =>
                {
                    b.Navigation("ReservationServices");
                });

            modelBuilder.Entity("hoteru_be.Entities.Room", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("hoteru_be.Entities.RoomStatus", b =>
                {
                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("hoteru_be.Entities.RoomType", b =>
                {
                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("hoteru_be.Entities.Service", b =>
                {
                    b.Navigation("ReservationServices");
                });

            modelBuilder.Entity("hoteru_be.Entities.User", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("hoteru_be.Entities.UserType", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
